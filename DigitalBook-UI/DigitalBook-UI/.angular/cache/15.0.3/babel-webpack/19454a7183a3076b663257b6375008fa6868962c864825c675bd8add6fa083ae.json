{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { User } from 'src/app/user.model';\nlet RegisterComponent = class RegisterComponent {\n  constructor(registrationService) {\n    this.registrationService = registrationService;\n    this.result = '';\n    this.isAccountCreate = false;\n    this.registerForm = new FormGroup({\n      name: new FormControl(\"\", [Validators.required, Validators.min(3), Validators.pattern(\"[a-zA-Z].*\")]),\n      username: new FormControl(\"\"),\n      email: new FormControl(\"\", [Validators.email, Validators.required]),\n      password: new FormControl(\"\"),\n      phonenumber: new FormControl(\"\"),\n      role: new FormControl(\"\")\n    });\n    //user=new User(this.Name,this.UserName.value,this.Email.value,this.Password.value,this.PhoneNumber.value,this.Role.value)\n    this.user = new User();\n  }\n  ngOnInit() {}\n  //user1=JSON.parse(this.user);\n  registerSumbited() {\n    this.user.name = this.Name.value;\n    this.user.username = this.UserName.value;\n    this.user.email = this.Email.value;\n    this.user.password = this.Password.value;\n    this.user.phoneNumber = this.PhoneNumber.value;\n    this.user.userRole = this.Role.value;\n    console.log(this.registerForm.value);\n    console.log(this.user);\n    console.log(this.Name);\n    this.registrationService.registerUser(this.user).subscribe(resp => {\n      console.log(resp);\n      this.result;\n      if (resp.length !== 0) {\n        this.isAccountCreate = true;\n      }\n      this.result = resp;\n    });\n    console.log(\"called Api\");\n  }\n  get Name() {\n    return this.registerForm.get(\"name\");\n  }\n  get UserName() {\n    return this.registerForm.get(\"username\");\n  }\n  get Email() {\n    return this.registerForm.get(\"email\");\n  }\n  get Password() {\n    return this.registerForm.get(\"password\");\n  }\n  get PhoneNumber() {\n    return this.registerForm.get(\"phonenumber\");\n  }\n  get Role() {\n    return this.registerForm.get(\"role\");\n  }\n};\nRegisterComponent = __decorate([Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})], RegisterComponent);\nexport { RegisterComponent };","map":{"version":3,"mappings":"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","names":["Component","FormControl","FormGroup","Validators","User","RegisterComponent","constructor","registrationService","name","required","min","pattern","username","email","password","phonenumber","role","ngOnInit","registerSumbited","user","Name","value","UserName","Email","Password","phoneNumber","PhoneNumber","userRole","Role","console","log","registerForm","registerUser","subscribe","resp","result","length","isAccountCreate","get","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\DigitalBook\\DigitalBook-UI\\DigitalBook-UI\\src\\app\\components\\register\\register.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { RegistrationService } from 'src/app/services/registration.service';\nimport { User } from 'src/app/user.model';\n\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit{\n   result : String='';\n   isAccountCreate: boolean=false;\n  constructor(public registrationService:RegistrationService){}\n  ngOnInit(): void {\n    \n  }\n\n  registerForm=new FormGroup({\n    name:new FormControl(\"\",[Validators.required,Validators.min(3),Validators.pattern(\"[a-zA-Z].*\")]),\n    username:new FormControl(\"\"),\n    email:new FormControl(\"\",[Validators.email,Validators.required]),\n    password:new FormControl(\"\"),\n    phonenumber:new FormControl(\"\"),\n    role:new FormControl(\"\")\n\n});\n\n//user=new User(this.Name,this.UserName.value,this.Email.value,this.Password.value,this.PhoneNumber.value,this.Role.value)\nuser =new User();\n\n\n//user1=JSON.parse(this.user);\nregisterSumbited(){\n\nthis.user.name=this.Name.value;\nthis.user.username=this.UserName.value;\nthis.user.email=this.Email.value;\nthis.user.password=this.Password.value;\nthis.user.phoneNumber=this.PhoneNumber.value;\nthis.user.userRole=this.Role.value;\n  console.log(this.registerForm.value);\n  console.log(this.user);\n  console.log(this.Name);\n  this.registrationService.registerUser(this.user).subscribe(resp=>{\n    console.log(resp);\n    this.result\n    if(resp.length!==0){\n      this.isAccountCreate=true;\n    }\n    this.result =<any> resp;\n  })\n  console.log(\"called Api\");\n  \n}\n\nget Name():FormControl{\n  return this.registerForm.get(\"name\") as FormControl;\n}\nget UserName():FormControl{\n  return this.registerForm.get(\"username\") as FormControl;\n}\nget Email():FormControl{\n  return this.registerForm.get(\"email\") as FormControl;\n}\nget Password():FormControl{\n  return this.registerForm.get(\"password\") as FormControl;\n}\n get PhoneNumber():FormControl{\n return this.registerForm.get(\"phonenumber\") as FormControl;\n}\nget Role():FormControl{\n  return this.registerForm.get(\"role\") as FormControl;\n }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}