{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction RegisterComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵtext(1, \"Name is rquired\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵtext(1, \"Name is too short\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵtext(1, \"Name should start with alphabat\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class RegisterComponent {\n  constructor() {\n    this.registerForm = new FormGroup({\n      name: new FormControl(\"\", [Validators.required, Validators.min(3), Validators.pattern(\"[a-zA-Z].*\")]),\n      username: new FormControl(\"\"),\n      email: new FormControl(\"\"),\n      password: new FormControl(\"\"),\n      phonenumber: new FormControl(\"\"),\n      role: new FormControl(\"\")\n    });\n  }\n  ngOnInit() {}\n  registerSumbited() {\n    console.log(this.registerForm.value);\n  }\n  get Name() {\n    return this.registerForm.get(\"name\");\n  }\n  get UserName() {\n    return this.registerForm.get(\"username\");\n  }\n  get Email() {\n    return this.registerForm.get(\"email\");\n  }\n  get Password() {\n    return this.registerForm.get(\"password\");\n  }\n  get PhoneNumber() {\n    return this.registerForm.get(\"phonenumber\");\n  }\n  get Role() {\n    return this.registerForm.get(\"role\");\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)();\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  decls: 47,\n  vars: 4,\n  consts: [[1, \"border\", \"p-3\", \"rounded\", 3, \"formGroup\", \"ngSubmit\"], [1, \"row\", \"g-0\"], [1, \"col\", \"text-center\", \"p-2\", \"mb-3\", \"bg-light\"], [1, \"fs-3\"], [1, \"row\"], [1, \"col\", \"mb-3\"], [\"for\", \"name\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", 1, \"form-control\"], [\"class\", \"form-text text-danger\", 4, \"ngIf\"], [\"for\", \"username\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"username\", \"formControlName\", \"username\", 1, \"form-control\"], [\"for\", \"email\", 1, \"form-label\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", 1, \"form-control\"], [\"for\", \"password\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", 1, \"form-control\"], [1, \"row\", \"mb-3\"], [1, \"col\", \"ps-3\"], [\"for\", \"phonenumber\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"phonenumber\", \"formControlName\", \"phonenumber\", 1, \"form-control\"], [1, \"m-1\"], [1, \"form-check\", \"form-check-inline\"], [\"type\", \"radio\", \"value\", \"AUTHOR\", \"id\", \"author\", \"formControlName\", \"role\", 1, \"form-check-input\"], [\"for\", \"author\", 1, \"form-check-label\"], [\"type\", \"radio\", \"value\", \"READER\", \"id\", \"reader\", \"formControlName\", \"role\", 1, \"form-check-input\"], [\"for\", \"reader\", 1, \"form-check-label\"], [1, \"col-6\", \"offset-3\"], [1, \"d-grid\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"form-text\", \"text-danger\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.registerSumbited();\n      });\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2)(3, \"span\", 3);\n      i0.ɵɵtext(4, \"Register\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(5, \"div\", 4)(6, \"div\", 5)(7, \"label\", 6);\n      i0.ɵɵtext(8, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 7);\n      i0.ɵɵtemplate(10, RegisterComponent_div_10_Template, 2, 0, \"div\", 8);\n      i0.ɵɵtemplate(11, RegisterComponent_div_11_Template, 2, 0, \"div\", 8);\n      i0.ɵɵtemplate(12, RegisterComponent_div_12_Template, 2, 0, \"div\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\", 5)(14, \"label\", 9);\n      i0.ɵɵtext(15, \"User Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"input\", 10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"div\", 4)(18, \"div\", 5)(19, \"label\", 11);\n      i0.ɵɵtext(20, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(21, \"input\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"div\", 5)(23, \"label\", 13);\n      i0.ɵɵtext(24, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(25, \"input\", 14);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(26, \"div\", 15)(27, \"div\", 16)(28, \"label\", 17);\n      i0.ɵɵtext(29, \"Phone Number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(30, \"input\", 18);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"div\", 16)(32, \"div\", 19);\n      i0.ɵɵtext(33, \"Role\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"div\", 20);\n      i0.ɵɵelement(35, \"input\", 21);\n      i0.ɵɵelementStart(36, \"label\", 22);\n      i0.ɵɵtext(37, \"AUTHOR\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(38, \"div\", 20);\n      i0.ɵɵelement(39, \"input\", 23);\n      i0.ɵɵelementStart(40, \"label\", 24);\n      i0.ɵɵtext(41, \"READER\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(42, \"div\", 4)(43, \"div\", 25)(44, \"div\", 26)(45, \"button\", 27);\n      i0.ɵɵtext(46, \"Submit\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngIf\", (ctx.Name.errors == null ? null : ctx.Name.errors[\"required\"]) && ctx.Name.touched || ctx.Name.dirty);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (ctx.Name.errors == null ? null : ctx.Name.errors[\"minlength\"]) && ctx.Name.touched || ctx.Name.dirty);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (ctx.Name.errors == null ? null : ctx.Name.errors[\"pattern\"]) && ctx.Name.touched || ctx.Name.dirty);\n    }\n  },\n  dependencies: [i1.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.RadioControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\"form[_ngcontent-%COMP%]{\\r\\n    width: 500px;\\r\\n}\\n/*# sourceURL=webpack://./src/app/components/register/register.component.css */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9yZWdpc3Rlci9yZWdpc3Rlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtBQUNoQiIsInNvdXJjZXNDb250ZW50IjpbImZvcm17XHJcbiAgICB3aWR0aDogNTAwcHg7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","i0","RegisterComponent","constructor","name","required","min","pattern","username","email","password","phonenumber","role","ngOnInit","registerSumbited","console","log","registerForm","value","Name","get","UserName","Email","Password","PhoneNumber","Role","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\DigitalBook\\DigitalBook-UI\\DigitalBook-UI\\src\\app\\components\\register\\register.component.ts","D:\\DigitalBook\\DigitalBook-UI\\DigitalBook-UI\\src\\app\\components\\register\\register.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit{\n  \n  constructor(){}\n  ngOnInit(): void {\n    \n  }\n\n  registerForm=new FormGroup({\n    name:new FormControl(\"\",[Validators.required,Validators.min(3),Validators.pattern(\"[a-zA-Z].*\")]),\n    username:new FormControl<any>(\"\"),\n    email:new FormControl<any>(\"\"),\n    password:new FormControl(\"\"),\n    phonenumber:new FormControl(\"\"),\n    role:new FormControl(\"\")\n\n});\nregisterSumbited(){\n  console.log(this.registerForm.value);\n}\n\nget Name():FormControl{\n  return this.registerForm.get(\"name\") as FormControl;\n}\nget UserName():FormControl{\n  return this.registerForm.get(\"username\") as FormControl;\n}\nget Email():FormControl{\n  return this.registerForm.get(\"email\") as FormControl;\n}\nget Password():FormControl{\n  return this.registerForm.get(\"password\") as FormControl;\n}\n get PhoneNumber():FormControl{\n return this.registerForm.get(\"phonenumber\") as FormControl;\n}\nget Role():FormControl{\n  return this.registerForm.get(\"role\") as FormControl;\n }\n}\n","<form  [formGroup]= \"registerForm\"  (ngSubmit)=\"registerSumbited()\"  class=\"border p-3 rounded\">\n    <div class=\"row g-0\">\n        <div class=\"col text-center p-2 mb-3 bg-light\">\n            <span class=\"fs-3\">Register</span>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col mb-3\" >\n            <label for=\"name\" class=\"form-label\">Name</label>\n            \n            <input type=\"text\" class=\"form-control\" id=\"name\" formControlName=\"name\">\n            <div class=\"form-text text-danger\" *ngIf=\"Name.errors?.['required'] && Name.touched || Name.dirty\">Name is rquired</div>\n            <div class=\"form-text text-danger\" *ngIf=\"Name.errors?.['minlength'] && Name.touched || Name.dirty\">Name is too short</div> \n            <div class=\"form-text text-danger\" *ngIf=\"Name.errors?.['pattern'] && Name.touched || Name.dirty\">Name should start with alphabat</div>    \n        </div>\n        <div class=\"col mb-3\">\n            <label for=\"username\" class=\"form-label\">User Name</label>\n            <input type=\"text\" class=\"form-control\" id=\"username\" formControlName=\"username\"/>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col mb-3\">\n            <label for=\"email\" class=\"form-label\">Email</label>\n            <input type=\"email\" class=\"form-control\" id=\"email\" formControlName=\"email\"/>\n        </div>\n        <div class=\"col mb-3\">\n            <label for=\"password\" class=\"form-label\">Password</label>\n            <input type=\"password\" class=\"form-control\" id=\"password\" formControlName=\"password\"/>\n        </div>\n    </div>\n      <div class=\"row mb-3\" >\n        <div class=\"col ps-3\">\n            <label for=\"phonenumber\" class=\"form-label\">Phone Number</label>\n            <input type=\"text\" class=\"form-control\" id=\"phonenumber\" formControlName=\"phonenumber\"/>\n        </div>\n        <div class=\"col ps-3\">\n            <div class=\"m-1\">Role</div>\n            <div class=\"form-check form-check-inline\">\n                <input type=\"radio\" class=\"form-check-input\" value=\"AUTHOR\" id=\"author\" formControlName=\"role\">\n                <label for=\"author\" class=\"form-check-label\">AUTHOR</label>\n            </div>\n            <div class=\"form-check form-check-inline\">\n                <input type=\"radio\" class=\"form-check-input\" value=\"READER\" id=\"reader\" formControlName=\"role\">\n                <label for=\"reader\" class=\"form-check-label\">READER</label>\n            </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-6 offset-3\">\n            <div class=\"d-grid\">\n                <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n            </div>\n        </div>\n      </div>  \n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}