{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./token-storage.service\";\nconst View_SubscribedBook_Api = \"http://localhost:8081/digitalbooks/readers/books/\";\nconst Read_SubscribedBook_Api = \"http://localhost:8081/digitalbooks/readers/books/11/read\";\nexport class ViewallsubscribedbookService {\n  constructor(http, localStorageToken) {\n    this.http = http;\n    this.localStorageToken = localStorageToken;\n  }\n  ViewsubscribeBook() {\n    const token_key = this.localStorageToken.getToken();\n    console.log(token_key);\n    const httpOptions = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ` + token_key\n    });\n    return this.http.get(View_SubscribedBook_Api, {\n      headers: httpOptions\n    });\n  }\n  readBook(_bookId) {\n    console.log(\"read Book method called \");\n    const token_key = this.localStorageToken.getToken();\n    console.log(token_key);\n    const httpOptions = new HttpHeaders({\n      'Content-Type': 'text',\n      Authorization: `Bearer ` + token_key,\n      'responseType': 'text'\n    });\n    console.log(\"api called\");\n    return this.http.get(Read_SubscribedBook_Api, {\n      headers: httpOptions\n    });\n  }\n}\nViewallsubscribedbookService.ɵfac = function ViewallsubscribedbookService_Factory(t) {\n  return new (t || ViewallsubscribedbookService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.TokenStorageService));\n};\nViewallsubscribedbookService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ViewallsubscribedbookService,\n  factory: ViewallsubscribedbookService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;;;;AAK9D,MAAMC,uBAAuB,GAAC,mDAAmD;AACjF,MAAMC,uBAAuB,GAAC,0DAA0D;AAIxF,OAAM,MAAOC,4BAA4B;EAEvCC,YAAmBC,IAAe,EAASC,iBAAqC;IAA7D,SAAI,GAAJD,IAAI;IAAoB,sBAAiB,GAAjBC,iBAAiB;EAAwB;EAGpFC,iBAAiB;IACf,MAAMC,SAAS,GAAC,IAAI,CAACF,iBAAiB,CAACG,QAAQ,EAAE;IACjDC,OAAO,CAACC,GAAG,CAACH,SAAS,CAAC;IACtB,MAAMI,WAAW,GAAG,IAAIZ,WAAW,CAAC;MACnC,cAAc,EAAE,kBAAkB;MAClCa,aAAa,EAAE,SAAS,GAAEL;KAC3B,CAAC;IAEF,OAAO,IAAI,CAACH,IAAI,CAACS,GAAG,CAACb,uBAAuB,EAAC;MAACc,OAAO,EAACH;IAAW,CAAC,CAAC;EACpE;EACAI,QAAQ,CAAEC,OAAc;IACtBP,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;IACvC,MAAMH,SAAS,GAAC,IAAI,CAACF,iBAAiB,CAACG,QAAQ,EAAE;IACjDC,OAAO,CAACC,GAAG,CAACH,SAAS,CAAC;IACtB,MAAMI,WAAW,GAAG,IAAIZ,WAAW,CAAC;MACnC,cAAc,EAAE,MAAM;MACtBa,aAAa,EAAE,SAAS,GAAEL,SAAS;MACnC,cAAc,EAAE;KAEjB,CAAC;IACFE,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;IACzB,OAAO,IAAI,CAACN,IAAI,CAACS,GAAG,CAACZ,uBAAuB,EAAC;MAACa,OAAO,EAACH;IAAW,CAAC,CAAC;EAEpE;;AA5BWT,4BAA4B;mBAA5BA,4BAA4B;AAAA;AAA5BA,4BAA4B;SAA5BA,4BAA4B;EAAAe,SAA5Bf,4BAA4B;EAAAgB,YAF3B;AAAM","names":["HttpHeaders","View_SubscribedBook_Api","Read_SubscribedBook_Api","ViewallsubscribedbookService","constructor","http","localStorageToken","ViewsubscribeBook","token_key","getToken","console","log","httpOptions","Authorization","get","headers","readBook","_bookId","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Hp\\Desktop\\DigitalBook\\DigitalBook-UI\\DigitalBook-UI\\src\\app\\services\\viewallsubscribedbook.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { TokenStorageService } from './token-storage.service';\n\nconst View_SubscribedBook_Api=\"http://localhost:8081/digitalbooks/readers/books/\";\nconst Read_SubscribedBook_Api=\"http://localhost:8081/digitalbooks/readers/books/11/read\";\n@Injectable({\n  providedIn: 'root'\n})\nexport class ViewallsubscribedbookService {\n\n  constructor(public http:HttpClient, public localStorageToken:TokenStorageService) { }\n\n\n  ViewsubscribeBook():Observable<any>{\n    const token_key=this.localStorageToken.getToken();\n    console.log(token_key);\n    const httpOptions = new HttpHeaders({\n     'Content-Type': 'application/json',\n     Authorization: `Bearer `+ token_key\n   });\n  \n   return this.http.get(View_SubscribedBook_Api,{headers:httpOptions});\n  }\n  readBook( _bookId:number):Observable<any>{\n    console.log(\"read Book method called \");\n    const token_key=this.localStorageToken.getToken();\n    console.log(token_key);\n    const httpOptions = new HttpHeaders({\n     'Content-Type': 'text',\n     Authorization: `Bearer `+ token_key,\n     'responseType': 'text'\n\n   });\n   console.log(\"api called\");\n   return this.http.get(Read_SubscribedBook_Api,{headers:httpOptions});\n  \n  }\n  \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}