{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { User } from 'src/app/user.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/registration.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../../header/header/header.component\";\nfunction RegisterComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtext(1, \"Name is rquired\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtext(1, \"Name is too short\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtext(1, \"Name should start with alphabat\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtext(1, \"Name is rquired\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtext(1, \"Name is too short\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class RegisterComponent {\n  constructor(registrationService) {\n    this.registrationService = registrationService;\n    this.result = 'Registration First ';\n    this.registerForm = new FormGroup({\n      name: new FormControl(\"\", [Validators.required, Validators.min(3), Validators.pattern(\"[a-zA-Z].*\")]),\n      username: new FormControl(\"\"),\n      email: new FormControl(\"\", [Validators.email, Validators.required]),\n      password: new FormControl(\"\"),\n      phonenumber: new FormControl(\"\"),\n      role: new FormControl(\"\")\n    });\n    //user=new User(this.Name,this.UserName.value,this.Email.value,this.Password.value,this.PhoneNumber.value,this.Role.value)\n    this.user = new User();\n  }\n  ngOnInit() {}\n  //user1=JSON.parse(this.user);\n  registerSumbited() {\n    this.user.name = this.Name.value;\n    this.user.username = this.UserName.value;\n    this.user.email = this.Email.value;\n    this.user.password = this.Password.value;\n    this.user.phoneNumber = this.PhoneNumber.value;\n    this.user.userRole = this.Role.value;\n    console.log(this.registerForm.value);\n    console.log(this.user);\n    this.registrationService.registerUser(this.user).subscribe(resp => {\n      console.log(resp);\n      this.result;\n      if (resp.length !== 0) {\n        this.isAccountCreate = true;\n        this.result = resp;\n      } else {\n        this.result = \"Registration Fail\";\n      }\n    });\n    console.log(\"called Api\");\n  }\n  get Name() {\n    return this.registerForm.get(\"name\");\n  }\n  get UserName() {\n    return this.registerForm.get(\"username\");\n  }\n  get Email() {\n    return this.registerForm.get(\"email\");\n  }\n  get Password() {\n    return this.registerForm.get(\"password\");\n  }\n  get PhoneNumber() {\n    return this.registerForm.get(\"phonenumber\");\n  }\n  get Role() {\n    return this.registerForm.get(\"role\");\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.RegistrationService));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  decls: 53,\n  vars: 8,\n  consts: [[\"calss\", \"container\"], [1, \"text-left\", \"fs-8\", 3, \"ngClass\"], [1, \"border\", \"p-3\", \"rounded\", 3, \"formGroup\", \"ngSubmit\"], [1, \"row\", \"g-0\"], [1, \"col\", \"text-center\", \"p-2\", \"mb-3\", \"bg-light\"], [1, \"fs-3\"], [1, \"row\"], [1, \"col\", \"mb-3\"], [\"for\", \"name\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", 1, \"form-control\"], [\"class\", \"form-text text-danger\", 4, \"ngIf\"], [\"for\", \"username\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"username\", \"formControlName\", \"username\", 1, \"form-control\"], [\"for\", \"email\", 1, \"form-label\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", 1, \"form-control\"], [\"for\", \"password\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", 1, \"form-control\"], [1, \"row\", \"mb-3\"], [1, \"col\", \"ps-3\"], [\"for\", \"phonenumber\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"phonenumber\", \"formControlName\", \"phonenumber\", 1, \"form-control\"], [1, \"m-1\"], [1, \"form-check\", \"form-check-inline\"], [\"type\", \"radio\", \"value\", \"AUTHOR\", \"id\", \"author\", \"formControlName\", \"role\", 1, \"form-check-input\"], [\"for\", \"author\", 1, \"form-check-label\"], [\"type\", \"radio\", \"value\", \"READER\", \"id\", \"reader\", \"formControlName\", \"role\", 1, \"form-check-input\"], [\"for\", \"reader\", 1, \"form-check-label\"], [1, \"col-6\", \"offset-3\"], [1, \"d-grid\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"form-text\", \"text-danger\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-header\");\n      i0.ɵɵelementStart(1, \"div\", 0)(2, \"p\", 1);\n      i0.ɵɵtext(3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.registerSumbited();\n      });\n      i0.ɵɵelementStart(5, \"div\", 3)(6, \"div\", 4)(7, \"span\", 5);\n      i0.ɵɵtext(8, \"Register\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(9, \"div\", 6)(10, \"div\", 7)(11, \"label\", 8);\n      i0.ɵɵtext(12, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"input\", 9);\n      i0.ɵɵtemplate(14, RegisterComponent_div_14_Template, 2, 0, \"div\", 10);\n      i0.ɵɵtemplate(15, RegisterComponent_div_15_Template, 2, 0, \"div\", 10);\n      i0.ɵɵtemplate(16, RegisterComponent_div_16_Template, 2, 0, \"div\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"div\", 7)(18, \"label\", 11);\n      i0.ɵɵtext(19, \"User Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(20, \"input\", 12);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(21, \"div\", 6)(22, \"div\", 7)(23, \"label\", 13);\n      i0.ɵɵtext(24, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(25, \"input\", 14);\n      i0.ɵɵtemplate(26, RegisterComponent_div_26_Template, 2, 0, \"div\", 10);\n      i0.ɵɵtemplate(27, RegisterComponent_div_27_Template, 2, 0, \"div\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"div\", 7)(29, \"label\", 15);\n      i0.ɵɵtext(30, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(31, \"input\", 16);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(32, \"div\", 17)(33, \"div\", 18)(34, \"label\", 19);\n      i0.ɵɵtext(35, \"Phone Number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(36, \"input\", 20);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(37, \"div\", 18)(38, \"div\", 21);\n      i0.ɵɵtext(39, \"Role\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(40, \"div\", 22);\n      i0.ɵɵelement(41, \"input\", 23);\n      i0.ɵɵelementStart(42, \"label\", 24);\n      i0.ɵɵtext(43, \"AUTHOR\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(44, \"div\", 22);\n      i0.ɵɵelement(45, \"input\", 25);\n      i0.ɵɵelementStart(46, \"label\", 26);\n      i0.ɵɵtext(47, \"READER\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(48, \"div\", 6)(49, \"div\", 27)(50, \"div\", 28)(51, \"button\", 29);\n      i0.ɵɵtext(52, \"Submit\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", ctx.isAccountCreate ? \"text-success pb-1\" : \"text-danger\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\" \", ctx.result, \" \");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngIf\", (ctx.Name.errors == null ? null : ctx.Name.errors[\"required\"]) && (ctx.Name.touched || ctx.Name.dirty));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (ctx.Name.errors == null ? null : ctx.Name.errors[\"minlength\"]) && (ctx.Name.touched || ctx.Name.dirty));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (ctx.Name.errors == null ? null : ctx.Name.errors[\"pattern\"]) && (ctx.Name.touched || ctx.Name.dirty));\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngIf\", (ctx.Email.errors == null ? null : ctx.Email.errors[\"required\"]) && (ctx.Email.touched || ctx.Email.dirty));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (ctx.Email.errors == null ? null : ctx.Email.errors[\"email\"]) && (ctx.Email.touched || ctx.Email.dirty));\n    }\n  },\n  dependencies: [i2.NgClass, i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.RadioControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i4.HeaderComponent],\n  styles: [\"form[_ngcontent-%COMP%]{\\r\\n    width: 500px;\\r\\n    margin-left: 400px;\\r\\n}\\r\\n.container[_ngcontent-%COMP%]{ \\r\\n    height: 100vh;\\r\\n    display: flex;\\r\\n    justify-content: center; \\r\\n    align-items: center; \\r\\n    margin-left: 400px;\\r\\n}\\r\\np[_ngcontent-%COMP%]{\\r\\n    margin-left: 400px;\\r\\n}\\n/*# sourceURL=webpack://./src/app/components/register/register.component.css */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9yZWdpc3Rlci9yZWdpc3Rlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtJQUNaLGtCQUFrQjtBQUN0QjtBQUNBO0lBQ0ksYUFBYTtJQUNiLGFBQWE7SUFDYix1QkFBdUI7SUFDdkIsbUJBQW1CO0lBQ25CLGtCQUFrQjtBQUN0QjtBQUNBO0lBQ0ksa0JBQWtCO0FBQ3RCIiwic291cmNlc0NvbnRlbnQiOlsiZm9ybXtcclxuICAgIHdpZHRoOiA1MDBweDtcclxuICAgIG1hcmdpbi1sZWZ0OiA0MDBweDtcclxufVxyXG4uY29udGFpbmVyeyBcclxuICAgIGhlaWdodDogMTAwdmg7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IFxyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjsgXHJcbiAgICBtYXJnaW4tbGVmdDogNDAwcHg7XHJcbn1cclxucHtcclxuICAgIG1hcmdpbi1sZWZ0OiA0MDBweDtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","User","i0","RegisterComponent","constructor","registrationService","name","required","min","pattern","username","email","password","phonenumber","role","ngOnInit","registerSumbited","user","Name","value","UserName","Email","Password","phoneNumber","PhoneNumber","userRole","Role","console","log","registerForm","registerUser","subscribe","resp","result","length","isAccountCreate","get","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\DigitalBook\\DigitalBook-UI\\DigitalBook-UI\\src\\app\\components\\register\\register.component.ts","D:\\DigitalBook\\DigitalBook-UI\\DigitalBook-UI\\src\\app\\components\\register\\register.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { RegistrationService } from 'src/app/services/registration.service';\nimport { User } from 'src/app/user.model';\n\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit{\n   result : String='Registration First ';\n   isAccountCreate: boolean | undefined;\n  constructor(public registrationService:RegistrationService){}\n  ngOnInit(): void {\n    \n  }\n\n  registerForm=new FormGroup({\n    name:new FormControl(\"\",[Validators.required,Validators.min(3),Validators.pattern(\"[a-zA-Z].*\")]),\n    username:new FormControl(\"\"),\n    email:new FormControl(\"\",[Validators.email,Validators.required]),\n    password:new FormControl(\"\"),\n    phonenumber:new FormControl(\"\"),\n    role:new FormControl(\"\")\n\n});\n\n//user=new User(this.Name,this.UserName.value,this.Email.value,this.Password.value,this.PhoneNumber.value,this.Role.value)\nuser =new User();\n\n\n//user1=JSON.parse(this.user);\nregisterSumbited(){\n\nthis.user.name=this.Name.value;\nthis.user.username=this.UserName.value;\nthis.user.email=this.Email.value;\nthis.user.password=this.Password.value;\nthis.user.phoneNumber=this.PhoneNumber.value;\nthis.user.userRole=this.Role.value;\n  console.log(this.registerForm.value);\n  console.log(this.user);\n  this.registrationService.registerUser(this.user).subscribe(resp=>{\n    console.log(resp);\n    this.result\n    if(resp.length!==0){\n      this.isAccountCreate=true;\n      this.result =<any> resp;\n    }else{\n      this.result=\"Registration Fail\"\n    }\n    \n  })\n  console.log(\"called Api\");\n  \n}\n\nget Name():FormControl{\n  return this.registerForm.get(\"name\") as FormControl;\n}\nget UserName():FormControl{\n  return this.registerForm.get(\"username\") as FormControl;\n}\nget Email():FormControl{\n  return this.registerForm.get(\"email\") as FormControl;\n}\nget Password():FormControl{\n  return this.registerForm.get(\"password\") as FormControl;\n}\n get PhoneNumber():FormControl{\n return this.registerForm.get(\"phonenumber\") as FormControl;\n}\nget Role():FormControl{\n  return this.registerForm.get(\"role\") as FormControl;\n }\n}\n","\n<app-header></app-header>\n\n<div calss=\"container\">\n    <p class=\"text-left fs-8\" [ngClass]=\"isAccountCreate ? 'text-success pb-1': 'text-danger'\">\n        {{result}}\n        </p>\n\n  <form [formGroup]= \"registerForm\"  (ngSubmit)=\"registerSumbited()\"  class=\"border p-3 rounded\">\n    <div class=\"row g-0\">\n        <div class=\"col text-center p-2 mb-3 bg-light\">\n            <span class=\"fs-3\">Register</span>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col mb-3\" >\n            <label for=\"name\" class=\"form-label\">Name</label>\n            \n            <input type=\"text\" class=\"form-control\" id=\"name\" formControlName=\"name\">\n            <div class=\"form-text text-danger\" *ngIf=\"Name.errors?.['required'] && (Name.touched || Name.dirty)\">Name is rquired</div>\n            <div class=\"form-text text-danger\" *ngIf=\"Name.errors?.['minlength'] && (Name.touched || Name.dirty)\">Name is too short</div> \n            <div class=\"form-text text-danger\" *ngIf=\"Name.errors?.['pattern'] && (Name.touched || Name.dirty)\">Name should start with alphabat</div>    \n        </div>\n        <div class=\"col mb-3\">\n            <label for=\"username\" class=\"form-label\">User Name</label>\n            <input type=\"text\" class=\"form-control\" id=\"username\" formControlName=\"username\"/>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col mb-3\">\n            <label for=\"email\" class=\"form-label\">Email</label>\n            <input type=\"email\" class=\"form-control\" id=\"email\" formControlName=\"email\"/>\n            <div class=\"form-text text-danger\" *ngIf=\"Email.errors?.['required'] && (Email.touched || Email.dirty)\">Name is rquired</div>\n            <div class=\"form-text text-danger\" *ngIf=\"Email.errors?.['email'] && (Email.touched || Email.dirty)\">Name is too short</div>\n        </div>\n        <div class=\"col mb-3\">\n            <label for=\"password\" class=\"form-label\">Password</label>\n            <input type=\"password\" class=\"form-control\" id=\"password\" formControlName=\"password\"/>\n        </div>\n    </div>\n      <div class=\"row mb-3\" >\n        <div class=\"col ps-3\">\n            <label for=\"phonenumber\" class=\"form-label\">Phone Number</label>\n            <input type=\"text\" class=\"form-control\" id=\"phonenumber\" formControlName=\"phonenumber\"/>\n        </div>\n        <div class=\"col ps-3\">\n            <div class=\"m-1\">Role</div>\n            <div class=\"form-check form-check-inline\">\n                <input type=\"radio\" class=\"form-check-input\" value=\"AUTHOR\" id=\"author\" formControlName=\"role\">\n                <label for=\"author\" class=\"form-check-label\">AUTHOR</label>\n            </div>\n            <div class=\"form-check form-check-inline\">\n                <input type=\"radio\" class=\"form-check-input\" value=\"READER\" id=\"reader\" formControlName=\"role\">\n                <label for=\"reader\" class=\"form-check-label\">READER</label>\n            </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-6 offset-3\">\n            <div class=\"d-grid\">\n                <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n            </div>\n        </div>\n      </div>  \n</form>\n</div>\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}