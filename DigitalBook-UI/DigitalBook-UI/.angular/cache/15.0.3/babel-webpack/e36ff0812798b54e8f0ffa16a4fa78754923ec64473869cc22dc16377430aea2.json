{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { LoginRequest } from 'src/app/login-request.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/login.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../../header/header/header.component\";\nfunction LoginComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1, \" UserName is rquired\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1, \"UserName is too short\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1, \"UserName should start with alphabat\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1, \"Email is rquired\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1, \"Email not valid\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1, \"Password is rquired\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1, \"Password not valid \\\"A-Z,a-Z,0-9\\\"\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class LoginComponent {\n  constructor(loginservice) {\n    this.loginservice = loginservice;\n    this.loginForm = new FormGroup({\n      username: new FormControl(\"\", [Validators.required, Validators.min(3), Validators.pattern(\"[a-zA-Z].*\")]),\n      email: new FormControl(\"\", [Validators.email, Validators.required]),\n      password: new FormControl(\"\", [Validators.required])\n    });\n    this.loninRequest = new LoginRequest();\n  }\n  ngOnInit() {}\n  login() {\n    this.loninRequest.UserName = this.UserName.value;\n    this.loninRequest.Emal = this.Email.value;\n    this.loninRequest.Password = this.Password.value;\n    this.loginservice.loginUser(this.loninRequest).subscribe(resp => {\n      console.log(resp);\n    });\n    console.log(this.UserName.value);\n    console.log(this.Email.value);\n    console.log(this.Password.value);\n    this.loginForm.reset();\n  }\n  get UserName() {\n    return this.loginForm.get(\"username\");\n  }\n  get Email() {\n    return this.loginForm.get(\"email\");\n  }\n  get Password() {\n    return this.loginForm.get(\"password\");\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.LoginService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 34,\n  vars: 8,\n  consts: [[\"calss\", \"container\"], [1, \"border\", \"p-3\", \"rounded\", 3, \"formGroup\", \"ngSubmit\"], [1, \"row\", \"g-0\"], [1, \"col\", \"text-center\", \"p-2\", \"mb-3\", \"bg-light\"], [1, \"fs-3\"], [1, \"row\"], [1, \"col\", \"mb-3\"], [\"for\", \"username\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"username\", \"formControlName\", \"username\", 1, \"form-control\"], [\"class\", \"form-text text-danger\", 4, \"ngIf\"], [\"for\", \"email\", 1, \"form-label\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", 1, \"form-control\"], [1, \"row\", \"mb-3\"], [1, \"col\", \"ps-3\"], [\"for\", \"password\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", 1, \"form-control\"], [1, \"col-6\", \"offset-3\"], [1, \"d-grid\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"form-text\", \"text-danger\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-header\");\n      i0.ɵɵelementStart(1, \"div\", 0)(2, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.login();\n      });\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"div\", 3)(5, \"span\", 4);\n      i0.ɵɵtext(6, \"Login\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(7, \"div\", 5)(8, \"div\", 6)(9, \"label\", 7);\n      i0.ɵɵtext(10, \"User Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 8);\n      i0.ɵɵtemplate(12, LoginComponent_div_12_Template, 2, 0, \"div\", 9);\n      i0.ɵɵtemplate(13, LoginComponent_div_13_Template, 2, 0, \"div\", 9);\n      i0.ɵɵtemplate(14, LoginComponent_div_14_Template, 2, 0, \"div\", 9);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"div\", 5)(16, \"div\", 6)(17, \"label\", 10);\n      i0.ɵɵtext(18, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"input\", 11);\n      i0.ɵɵtemplate(20, LoginComponent_div_20_Template, 2, 0, \"div\", 9);\n      i0.ɵɵtemplate(21, LoginComponent_div_21_Template, 2, 0, \"div\", 9);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(22, \"div\", 12)(23, \"div\", 13)(24, \"label\", 14);\n      i0.ɵɵtext(25, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(26, \"input\", 15);\n      i0.ɵɵtemplate(27, LoginComponent_div_27_Template, 2, 0, \"div\", 9);\n      i0.ɵɵtemplate(28, LoginComponent_div_28_Template, 2, 0, \"div\", 9);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(29, \"div\", 5)(30, \"div\", 16)(31, \"div\", 17)(32, \"button\", 18);\n      i0.ɵɵtext(33, \"Login\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngIf\", (ctx.UserName.errors == null ? null : ctx.UserName.errors[\"required\"]) && (ctx.UserName.touched || ctx.UserName.dirty));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (ctx.UserName.errors == null ? null : ctx.UserName.errors[\"minlength\"]) && (ctx.UserName.touched || ctx.UserName.dirty));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (ctx.UserName.errors == null ? null : ctx.UserName.errors[\"pattern\"]) && (ctx.UserName.touched || ctx.UserName.dirty));\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", (ctx.Email.errors == null ? null : ctx.Email.errors[\"required\"]) && (ctx.Email.touched || ctx.Email.dirty));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (ctx.Email.errors == null ? null : ctx.Email.errors[\"email\"]) && (ctx.Email.touched || ctx.Email.dirty));\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", (ctx.Password.errors == null ? null : ctx.Password.errors[\"required\"]) && (ctx.Password.touched || ctx.Password.dirty));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (ctx.Email.errors == null ? null : ctx.Email.errors[\"email\"]) && (ctx.Email.touched || ctx.Email.dirty));\n    }\n  },\n  dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i4.HeaderComponent],\n  styles: [\"form[_ngcontent-%COMP%]{\\r\\n    width: 500px;\\r\\n    margin-left: 400px;\\r\\n    margin-top: 50px;\\r\\n}\\r\\n.container[_ngcontent-%COMP%]{ \\r\\n    height: 100vh;\\r\\n    display: flex;\\r\\n    justify-content: center; \\r\\n    align-items: center; \\r\\n    margin-left: 400px;\\r\\n    margin-top: 50px;\\r\\n}\\n/*# sourceURL=webpack://./src/app/components/login/login.component.css */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixnQkFBZ0I7QUFDcEI7QUFDQTtJQUNJLGFBQWE7SUFDYixhQUFhO0lBQ2IsdUJBQXVCO0lBQ3ZCLG1CQUFtQjtJQUNuQixrQkFBa0I7SUFDbEIsZ0JBQWdCO0FBQ3BCIiwic291cmNlc0NvbnRlbnQiOlsiZm9ybXtcclxuICAgIHdpZHRoOiA1MDBweDtcclxuICAgIG1hcmdpbi1sZWZ0OiA0MDBweDtcclxuICAgIG1hcmdpbi10b3A6IDUwcHg7XHJcbn1cclxuLmNvbnRhaW5lcnsgXHJcbiAgICBoZWlnaHQ6IDEwMHZoO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOyBcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7IFxyXG4gICAgbWFyZ2luLWxlZnQ6IDQwMHB4O1xyXG4gICAgbWFyZ2luLXRvcDogNTBweDtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","LoginRequest","i0","LoginComponent","constructor","loginservice","username","required","min","pattern","email","password","ngOnInit","login","loninRequest","UserName","value","Emal","Email","Password","loginUser","subscribe","resp","console","log","loginForm","reset","get","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Hp\\Desktop\\DigitalBook\\DigitalBook-UI\\DigitalBook-UI\\src\\app\\components\\login\\login.component.ts","C:\\Users\\Hp\\Desktop\\DigitalBook\\DigitalBook-UI\\DigitalBook-UI\\src\\app\\components\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { LoginRequest } from 'src/app/login-request.model';\nimport { LoginService } from 'src/app/services/login.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  \n      constructor(public loginservice:LoginService){\n\n      }\n  ngOnInit(): void {\n  \n  }\n\n  loginForm=new FormGroup({\n    username:new FormControl(\"\", [Validators.required,Validators.min(3),Validators.pattern(\"[a-zA-Z].*\")]),\n    email:new FormControl(\"\",[Validators.email,Validators.required]),\n    password:new FormControl(\"\",[Validators.required])\n\n});\nloninRequest=new LoginRequest();\n\n\nlogin(){\n\n    this.loninRequest.UserName=this.UserName.value;\n    this.loninRequest.Emal=this.Email.value;\n    this.loninRequest.Password=this.Password.value;\n    this.loginservice.loginUser(this.loninRequest).subscribe(resp=>{\n      console.log(resp);\n    })  \n\n\n  console.log(this.UserName.value);\n  console.log(this.Email.value);\n  console.log(this.Password.value);\n    this.loginForm.reset();\n\n}\nget UserName():FormControl{\n  return this.loginForm.get(\"username\") as FormControl;\n}\nget Email():FormControl{\n  return this.loginForm.get(\"email\") as FormControl;\n}\nget Password():FormControl{\n  return this.loginForm.get(\"password\") as FormControl;\n}\n\n}\n","<app-header></app-header>\n\n\n<div calss=\"container\">\n   \n\n  <form [formGroup]= \"loginForm\"  (ngSubmit)=\"login()\" class=\"border p-3 rounded\">\n    <div class=\"row g-0\">\n        <div class=\"col text-center p-2 mb-3 bg-light\">\n            <span class=\"fs-3\">Login</span>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col mb-3\" >\n            <label for=\"username\" class=\"form-label\">User Name</label>\n            \n            <input type=\"text\" class=\"form-control\" id=\"username\" formControlName=\"username\">\n            <div class=\"form-text text-danger\" *ngIf=\"UserName.errors?.['required'] && (UserName.touched || UserName.dirty)\"> UserName is rquired</div>\n            <div class=\"form-text text-danger\" *ngIf=\"UserName.errors?.['minlength'] && (UserName.touched || UserName.dirty)\">UserName is too short</div> \n            <div class=\"form-text text-danger\" *ngIf=\"UserName.errors?.['pattern'] && (UserName.touched || UserName.dirty)\">UserName should start with alphabat</div>\n       \n        </div>\n        \n    </div>\n    <div class=\"row\">\n        <div class=\"col mb-3\">\n            <label for=\"email\" class=\"form-label\">Email</label>\n            <input type=\"email\" class=\"form-control\" id=\"email\" formControlName=\"email\"/>\n            <div class=\"form-text text-danger\" *ngIf=\"Email.errors?.['required'] && (Email.touched || Email.dirty)\">Email is rquired</div>\n            <div class=\"form-text text-danger\" *ngIf=\"Email.errors?.['email'] && (Email.touched || Email.dirty)\">Email not valid</div>\n        </div>\n    </div>\n      <div class=\"row mb-3\" >\n        <div class=\"col ps-3\">\n            <label for=\"password\" class=\"form-label\">Password</label>\n            <input type=\"password\" class=\"form-control\" id=\"password\" formControlName=\"password\"/>\n            <div class=\"form-text text-danger\" *ngIf=\"Password.errors?.['required'] && (Password.touched || Password.dirty)\">Password is rquired</div>\n            <div class=\"form-text text-danger\" *ngIf=\"Email.errors?.['email'] && (Email.touched || Email.dirty)\">Password not valid \"A-Z,a-Z,0-9\"</div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-6 offset-3\">\n            <div class=\"d-grid\">\n                <button type=\"submit\" class=\"btn btn-primary\">Login</button>\n            </div>\n        </div>\n      </div>  \n</form>\n</div>\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}